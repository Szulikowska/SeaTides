#pragma checksum "C:\Studia\Praca\SeaTides\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5cee51a859854a43b0b6fa655a9defdf87f9d781"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Studia\Praca\SeaTides\Views\_ViewImports.cshtml"
using SeaTides;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Studia\Praca\SeaTides\Views\_ViewImports.cshtml"
using SeaTides.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5cee51a859854a43b0b6fa655a9defdf87f9d781", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a735ba64e4b8fcbacde5f7641571dd3383a4d3f8", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Studia\Praca\SeaTides\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\" integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"");
            BeginWriteAttribute("crossorigin", " crossorigin=\"", 235, "\"", 249, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n<script src=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\" integrity=\"sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==\"");
            BeginWriteAttribute("crossorigin", " crossorigin=\"", 424, "\"", 438, 0);
            EndWriteAttribute();
            WriteLiteral(@"></script>
<link rel=""stylesheet"" href=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.css"" />
<link rel=""stylesheet"" href=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.Default.css"" />
<script src=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/leaflet.markercluster.js""></script>
<link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"">
<link rel=""stylesheet"" href=""L.Control.SlideMenu.css"">
<script src=""L.Control.SlideMenu.js""></script>

<style>
    #map {
        width: 1200px;
        height: 700px;
    }
</style>

<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
  <div class=""modal-dialog"" role=""document"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h5 class=""modal-title"" id=""exampleModalLabel"">Modal title</h5>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""");
            WriteLiteral(@">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body""></div>
      <div class=""modal-footer"">
        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
      </div>
    </div>
  </div>
</div>

<div id='map'></div>
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'></script>
<script>
    var map = L.map('map', { minZoom: 2, maxZoom: 14 }).setView([55, -3.3], 5);
    var markerClusters = L.markerClusterGroup();
    var newMarker = {
        portName: """",
        timeDifference: 4, 
        longtitude: -55,
        latitude: -55,
        basePort: """"
    };

    var formHtml = `
    <form action='http://localhost:44344/'>
        <div class=""form-check form-switch"">
            <input class=""form-check-input"" type=""checkbox"" id=""markPortSwitch"">
            <label class=""form-check-label"" for=""markPortSwitch""> Mark Port on the Map </label>
        </div>

     ");
            WriteLiteral(@"   <div class=""mb-3"">
            <label for=""port1"" class=""form-label""> Port </label>
            <input type=""text"" class=""form-control"" id=""port1"" aria-describedby=""port1Help"" required>
            <div id=""port1Help"" class=""form-text""> Your marked port name </div>
        </div>
        <div class=""mb-3"">
            <label for=""timeDifference"" class=""form-label""> Time difference </label>
            <input type=""number"" class=""form-control"" id=""timeDifference"" required>
        </div>

        <div class=""input-group mb-3"">
            <span class=""input-group-text"" id=""longtitude-description""> Longtitude </span>
            <input type=""number"" id=""longtitude"" class=""form-control"" aria-label=""Longtitude"" aria-describedby=""longtitude-description"" min=""-200"" max=""200"" readonly required>
        </div>
        <div class=""input-group mb-3"">
            <span class=""input-group-text"" id=""latitude-description""> Latitude </span>
            <input type=""number"" id=""latitude"" class=""form-contro");
            WriteLiteral(@"l"" aria-label=""Latitude"" aria-describedby=""latitude-description"" min=""-200"" max=""200"" readonly required>
        </div>

        <div class=""mb-3"">
            <label for=""port2"" class=""form-label""> Base Port </label>
            <input type=""text"" class=""form-control"" id=""port2"" aria-describedby=""port2Help"" readonly required>
            <div id=""port2Help"" class=""form-text""> Base port, marked on the map by leaves </div>
        </div>

        <button type=""submit"" class=""btn btn-primary""> Submit </button>
    </form>
`;
    var slideMenu = L.control.slideMenu(formHtml, { position: 'bottomleft', menuposition: 'topright', width: '30%', height: '400px', delay: '50', icon: 'fa-chevron-left' }).addTo(map);
    console.log('slideMenu:', slideMenu);

    var markSwitch = document.getElementById('markPortSwitch');
    var latInput = document.getElementById('latitude');
    var lngInput = document.getElementById('longtitude');
    var basePortInput = document.getElementById('port2');
    var ready");
            WriteLiteral(@"ToMarkPort = false;

    $(markSwitch).change(function () {
        if ($(this).is(':checked')) {
            readyToMarkPort = true;
        } else {
            readyToMarkPort = false;
        }
    });


    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
    }).addTo(map);

    var LeafIcon = L.Icon.extend({
        options: {
            iconSize: [38, 95],
            iconAnchor: [22, 94],
            popupAnchor: [-3, -76]
        }
    });


    var greenIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png' }),
        redIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png' }),
        orangeIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-orange.png' });
    map.addLayer(markerClusters);

    $.ajax({
        url: 'Home/GetStations',
 ");
            WriteLiteral(@"       success: function (data) {
            markerClusters.addLayer(L.geoJSON(data, {
                onEachFeature: function (feature, layer) {
                    layer.on('click', function (e) {
                        console.log(feature);
                        if (readyToMarkPort) { // Send port name to form data
                            basePortInput.value = feature.properties.name;
                        } else {
                            var str = ""Station: "" + feature.properties.name;
                            $('.modal-title').text(str);
                            $('.modal-body').append('<ul class=""list-group"">');
                            $(feature.events).each(function (i, event) {
                                console.log(event);
                                $('.modal-body').append('<li class=""list-group-item"">' + event.dateTime + "" "" + event.height + 'm </li>');
                            });
                            $('.modal-body').append('</ul>');
    ");
            WriteLiteral(@"                        $('#exampleModal').modal();
                        }
                    });
                }
            }));
        },
    });

    map.on('click',
        function (e) {
            if (!readyToMarkPort) return;
            var coord = e.latlng.toString().split(',');
            var lat = coord[0].split('(');
            var lng = coord[1].split(')');
            newMarker.latitude = parseFloat(lat[1]);
            newMarker.longtitude = parseFloat(lng[0]);
            latInput.value = parseFloat(lat[1]);
            lngInput.value = parseFloat(lng[0]);
            markerClusters.addLayer(L.marker([lat[1], lng[0]]).bindPopup(""zXDDDD""));
        }
    );
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
