#pragma checksum "C:\Studia\Praca\SeaTides\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c56d7853b40b775730457ae2e712492addd61c25"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Studia\Praca\SeaTides\Views\_ViewImports.cshtml"
using SeaTides;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Studia\Praca\SeaTides\Views\_ViewImports.cshtml"
using SeaTides.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c56d7853b40b775730457ae2e712492addd61c25", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a735ba64e4b8fcbacde5f7641571dd3383a4d3f8", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Studia\Praca\SeaTides\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\" integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"");
            BeginWriteAttribute("crossorigin", " crossorigin=\"", 235, "\"", 249, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n<script src=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\" integrity=\"sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==\"");
            BeginWriteAttribute("crossorigin", " crossorigin=\"", 424, "\"", 438, 0);
            EndWriteAttribute();
            WriteLiteral(@"></script>
<link rel=""stylesheet"" href=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.css""/>
<link rel=""stylesheet"" href=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.Default.css""/>
<script src=""https://unpkg.com/leaflet.markercluster@1.1.0/dist/leaflet.markercluster.js""></script>

<style>
    #map {
        width: 1200px;
        height: 700px;
    }
</style>

<div id='map'></div>
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'></script>
<script>
    var map = L.map('map').setView([55, -3.3], 5);
    var markerClusters = L.markerClusterGroup();

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
    }).addTo(map);

    var LeafIcon = L.Icon.extend({
        options: {
            iconSize: [38, 95],
            iconAnchor: [22, 94],
            popupAnchor: [-3, -76]
        }
    ");
            WriteLiteral(@"});

    var greenIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png' }),
        redIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png' }),
        orangeIcon = new LeafIcon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-orange.png' });

    $.ajax({
        url: '/Home/GetStations',
        success: function (data) {
            console.log(data);
            console.log(""data"");
            $(data).each(function (ind, item) {
                console.log(item);
                console.log(""item"");
                $(item.features).each(function (i, station) {
                    console.log(station);
                    console.log(""station"");
                    var lat = station.geometry.coordinates[1];
                    var long = station.geometry.coordinates[0];
                    console.log(lat);
                    var point = L.marker([lat, long], { icon: greenIcon }).bindPopup(""Station:");
            WriteLiteral(" \" + station.properties.name);\r\n                    markerClusters.addLayer(point);\r\n                });\r\n            });\r\n            map.addLayer(markerClusters);\r\n        },\r\n    });\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
