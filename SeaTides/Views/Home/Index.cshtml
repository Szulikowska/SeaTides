@{
    ViewData["Title"] = "Home Page";
}


<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==" crossorigin=""></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.Default.css" />
<script src="https://unpkg.com/leaflet.markercluster@1.1.0/dist/leaflet.markercluster.js"></script>
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="L.Control.SlideMenu.css">
<script src="~/L.Control.SlideMenu.js"></script>
<script src="~/moment.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    #map {
        width: 1200px;
        height: 700px;
    }
</style>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="info-div"></div>
                <canvas id="chart_div"></canvas>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id='map'></div>
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'></script>
<script>
    var map = L.map('map', { minZoom: 2, maxZoom: 14 }).setView([55, -3.3], 5);
    var markerClusters = L.markerClusterGroup();
    var newMarkerLayer = L.markerClusterGroup();
    var newMarker = {
        portName: "",
        timeDifference: 4,
        longtitude: -55,
        latitude: -55,
        basePort: "",
        basePortName: ""
    };

    var formHtml = `
    <form>
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="markPortSwitch">
            <label class="form-check-label" for="markPortSwitch"> Mark Port on the Map </label>
        </div>

        <div class="mb-3">
            <label for="port1" class="form-label"> Port </label>
            <input type="text" class="form-control" id="port1" aria-describedby="port1Help" required>
            <div id="port1Help" class="form-text"> Your marked port name </div>
        </div>
        <div class="mb-3">
            <label for="timeDifference" class="form-label"> Time difference </label>
            <input type="number" class="form-control" id="timeDifference" required>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text" id="longtitude-description"> Longtitude </span>
            <input type="number" id="longtitude" class="form-control" aria-label="Longtitude" aria-describedby="longtitude-description" min="-200" max="200" readonly required>
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text" id="latitude-description"> Latitude </span>
            <input type="number" id="latitude" class="form-control" aria-label="Latitude" aria-describedby="latitude-description" min="-200" max="200" readonly required>
        </div>

        <div class="mb-3">
            <label for="port2" class="form-label"> Base Port </label>
            <input type="text" class="form-control" id="port2" aria-describedby="port2Help" readonly required>
            <div id="port2Help" class="form-text"> Base port, marked on the map by leaves </div>
        </div>

        <button type="button" class="btn btn-primary" onclick="loadJsonData()"> Submit </button>
    </form>
`;
    var slideMenu = L.control.slideMenu(formHtml, { position: 'bottomleft', menuposition: 'topright', width: '30%', height: '400px', delay: '50', icon: 'fa-chevron-left' }).addTo(map);
    console.log('slideMenu:', slideMenu);

    var markSwitch = document.getElementById('markPortSwitch');
    var latInput = document.getElementById('latitude');
    var lngInput = document.getElementById('longtitude');
    var basePortInput = document.getElementById('port2');
    var readyToMarkPort = false;

    $(markSwitch).change(function () {
        if ($(this).is(':checked')) {
            readyToMarkPort = true;
        } else {
            readyToMarkPort = false;
        }
    });


    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);


    function createCustomIcon(feature, latlng) {
        var greenIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        return L.marker(latlng, { icon: greenIcon })
    }


    map.addLayer(markerClusters);
    var myChart = new Chart();

    $.ajax({
        url: 'Home/GetStations',
        success: function (data) {
            markerClusters.addLayer(L.geoJSON(data, {
                pointToLayer: createCustomIcon,
                onEachFeature: function (feature, layer) {
                    layer.bindTooltip('<p>Name: ' + feature.properties.name + '</p> Station Id: ' + feature.properties.id);
                    layer.on('click', function (e) {
                        if (readyToMarkPort) { 
                            basePortInput.value = feature.properties.name;
                            newMarker.basePort = feature.properties.id;
                            newMarker.basePortName = feature.properties.name;
                        }
                        else {
                            var str = "Station: " + feature.properties.name;
                            $('.modal-title').text(str);
                            tidalEvents = [];
                            tidalHeights = [];
                            $(feature.events).each(function (i, event) {
                                var date = new Date(event.dateTime)
                                tidalEvents.push(date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + '  ' + date.getHours() + ':' + date.getMinutes());
                                tidalHeights.push(event.height);
                            });
                            var ctx = document.getElementById("chart_div").getContext('2d');
                            myChart.destroy();
                            myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: tidalEvents,
                                    datasets: [{
                                        label: "Tidal Height",
                                        data: tidalHeights,
                                        borderColor: 'rgba(75, 192, 192, 0.2)',
                                        backgroundColor: 'rgba(75, 192, 192, 1)',
                                        fill: false,
                                        tension: 0.4
                                    }]
                                },
                                options: {
                                    scales: {
                                        y: {
                                            title: {
                                                display: true,
                                                align: "start",
                                                text: "[m]"
                                            }
                                        }
                                    }
                                }
                            });
                            $('#exampleModal').modal();
                        }
                    });
                }
            }));
        },
    });

    $.ajax({
        url: 'Home/GetUserStations',
        success: function (data) {
            $(data).each(function (ind, item) {
                var lat = item.latitude;
                var long = item.longtitude;
                var point = L.marker([lat, long]).bindPopup("Station: " + item.portName + "<br> Base port Id:" + item.basePort).on('click', function (e) {
                    var str = "Station: " + item.portName;
                    $('.modal-title').text(str);
                    $('.info-div').html("Time difference: " + item.timeDifference + "<br> Base port name: " + item.basePortName);
                    $.ajax({
                        type: "POST",
                        url: 'Home/GetStationEventsById',
                        data: { id: item.basePort },
                        success: function (events)
                        {
                            tidalEvents = [];
                            tidalHeights = [];
                            $(events).each(function (i, event) {
                            var date = new Date(event.dateTime)
                            tidalEvents.push(date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + '  ' + date.getHours() + ':' + date.getMinutes());
                                tidalHeights.push(event.height);
                               
                            });
                            var ctx = document.getElementById("chart_div").getContext('2d');
                            myChart.destroy();
                            myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: tidalEvents,
                                    datasets: [{
                                        label: "Tidal Height",
                                        data: tidalHeights,
                                        borderColor: 'rgba(75, 192, 192, 0.2)',
                                        backgroundColor: 'rgba(75, 192, 192, 1)',
                                        fill: false,
                                        tension: 0.4
                                    }]
                                },
                                options: {
                                    scales: {
                                        y: {
                                            title: {
                                                display: true,
                                                align: "start",
                                                text: "[m]"
                                            }
                                        }
                                    }
                                }
                            })
                        } 
                    });
                    $('#exampleModal').modal();
            });
                markerClusters.addLayer(point);
            });
        },
    });

    map.addLayer(newMarkerLayer);
    map.on('click',
        function (e) {
            if (!readyToMarkPort) return;
            newMarkerLayer.clearLayers();
            var coord = e.latlng.toString().split(',');
            var lat = coord[0].split('(');
            var lng = coord[1].split(')');
            newMarker.latitude = parseFloat(lat[1]);
            newMarker.longtitude = parseFloat(lng[0]);
            latInput.value = parseFloat(lat[1]);
            lngInput.value = parseFloat(lng[0]);
            newMarkerLayer.addLayer(L.marker([lat[1], lng[0]]).bindPopup("Localization of new port"));
        }
    );

    function loadJsonData() {
        newMarker.portName = document.getElementById("port1").value,
            newMarker.timeDifference = document.getElementById("timeDifference").value,
            newMarker.longtitude = document.getElementById("longtitude").value,
            newMarker.latitude = document.getElementById("latitude").value,
        $.ajax({
            type: "POST",
            url: "Home/SavePortData",
            data: { newPortData: JSON.stringify(newMarker)}, //Change inputData to match the argument in your controller method
        });
        window.location.reload(true);
    };
</script>